services:
  auth:
    container_name: auth
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    env_file:
      - ./apps/auth/docker.env
      - docker.env
    command: npm run start:dev auth
    ports:
      - ${AUTH_PORT}:${AUTH_PORT}
    volumes:
      - .:/app

  reservations:
    container_name: reservations
    build:
      context: .
      dockerfile: ./apps/reservations/Dockerfile
      target: development
    env_file:
      - ./apps/reservations/docker.env
      - docker.env
    command: npm run start:dev reservations
    ports:
      - ${RESERVATION_PORT}:${RESERVATION_PORT}
    volumes:
      - .:/app

  payments:
    container_name: payments
    build:
      context: .
      dockerfile: ./apps/payments/Dockerfile
      target: development
    env_file:
      - ./apps/payments/docker.env
      - docker.env
    command: npm run start:dev payments
    ports:
      - ${PAYMENT_PORT}:${PAYMENT_PORT}
    volumes:
      - .:/app

  mongo:
    container_name: mongo
    image: mongo
    ports:
      - 27017:27017
    volumes:
      - mongo-data:/data/db

volumes:
  mongo-data:
    driver: local
